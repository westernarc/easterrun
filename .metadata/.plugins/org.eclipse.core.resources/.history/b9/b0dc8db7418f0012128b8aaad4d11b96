import java.awt.Color;
import java.awt.GridLayout;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;

import javax.swing.BorderFactory;
import javax.swing.JFrame;
import javax.swing.JPanel;


public class Minesweeper extends JFrame {
	MineButton[][] minefieldPanels;
	
	public static void main(String[] args) {
		Minesweeper ms = new Minesweeper();
	}
	public Minesweeper() {
		setDefaultCloseOperation(EXIT_ON_CLOSE);
		setSize(500,500);
		
		createMinefield(10);
		
		setVisible(true);
	}
	
	private void createMinefield(int size) {
		minefieldPanels = new MineButton[size][size];
		
		//Place 10 random bombs
		for(int i = 0; i < 10; i++) {
			int randomX = (int)Math.round(Math.random() * (size - 1));
			int randomY = (int)Math.round(Math.random() * (size - 1));
			
			//If the spot on the minefield is not already occupied occupy it
			if(!minefield[randomX][randomY]) {
				minefield[randomX][randomY] = true;
			} else {
				//If it's already occupied redo this bomb placement
				i--;
			}
		}
		
		//Calculate bombs in vicinity
		for(int x = 0; x < size; x++) {
			for(int y = 0; y < size; y++) {
				minefield[x][y] = false;
			}
		}
		
		//Set up panels
		setLayout(new GridLayout(size, size));
		
		//Initialize minefield
		for(int y = 0; y < size; y++) {
			for(int x = 0; x < size; x++) {
				minefieldPanels[x][y] = new MineButton(x, y);
				minefieldPanels[x][y].setHoldsMine(false);
				
				minefieldPanels[x][y].addMouseListener(new MouseAdapter() {
					public void mouseClicked(MouseEvent me) {
						MineButton source = (MineButton)me.getSource();
						//source.setMinesInVicinity(3);
					}
				});
				
				if(!minefield[x][y]) {
					minefieldPanels[x][y].setBackground(Color.GRAY);
					//minefieldPanels[x][y].
				} else {
					minefieldPanels[x][y].setBackground(Color.RED);
				}
				minefieldPanels[x][y].setBorder(BorderFactory.createLineBorder(Color.WHITE));
				getContentPane().add(minefieldPanels[x][y]);
			}
		}
	}
}
